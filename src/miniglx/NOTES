
CLIENT-SIDE CODE (LIBGL.SO)
---------------------------

dispatch.c
	
	- The libGL.so dispatch table.

dri_util.c
dri_util.h

	- Previously part of the driver.so file.
	- Contains a lot of window-system specific code, but has only
	  a single entrypoint.  By moving this to live in libGL.so,
	  these details are made more "private" to libGL.so.  We'd
	  probably have to reproduce an unfeasible amount of X's
	  clientside internals to keep this in the driver.so file.


miniglx.c

	- Miniglx bindings.  Includes things like XOpenDisplay as well
          as more standard GLX fare.

miniglxP.h 
	
	- Cut down version of glxclient.h

drm.h
sarea.h
	- kernel interfaces.  Note that not all drivers will talk to a
	  kernel module

xf86drm.c

	- The drm* commands.  These are also currently present in the
	  loadable driver.  Some of these are called by dri_util.c.
	  May be possible to load the driver.so module before calling
	  any of these, or else to remove them from the driver.so
	  module and have them live here (** compatibility concerns).

xf86drm.h
	- Interfaces for xf86drm.c.


These build a libGL.so which can load binary modules for an fbdev
environment.  Those binary modules *could* work with X11, but
currently are incompatible with the X11 modules due to the movement of
shared code into libGL.so -- in particular dri_util.c and xf86drm.c
which were previously part of the loadable driver.  

------------------------------------------------------------





------------------------------------------------------------

Porting GLX apps to MiniGLX
---------------------------

A quick list of issues encountered in porting existing GLX apps to
MiniGLX.  Listed in no particular order.

1) No input events

MiniGLX doesn't provide an input layer, so any X11 input event
handling in the existing app will have to be redone for whatever
input devices exist on the target.

2) No configuration, expose events

Many GLX and Xlib programs wait on an event to ensure the window has
become visible after being mapped.  MiniGLX provides no equivalent
facility.

3) Different headers

X11/Xlib.h, GL/GLX.h, etc must not be used if the program is being
compiled against MiniGLX.

The equivalent header is GL/MiniGLX.h.

4) Different library

It may be necessary to link directly against the minGLX libGL.so.

5) Reduced number of Xlib and GLX entrypoints.

By definition (MiniGLX is a subset of GLX), many Xlib and GLX
entrypoints, structures and macros are not present in MiniGLX.  It
will be necessary to find and eliminate all references to
non-supported entrypoints.


---------------------------------------------------------------

Bugs in radeonfb.o -- the radeon framebuffer driver.
----------------------------------------------------

Several bugs have been found in the radeonfb.o framebuffer driver.  

1) Occasionally, after entering graphics mode, colors appear 'shifted'
or 'translated', particularly in higher resolution modes.  This is
definitely a bug in radeonfb.o as this can be provoked even when using
the software dri driver (fb_dri.so).  Importance: High.  Workaround:
None, except restarting the application.

2) Modes with virtual resolutions different to displayed resolutions
do not work.  Importance: medium.  Workaround: Avoid these situations
by always setting the visible resolution to the virtual resolution
specified in the configuration file.

